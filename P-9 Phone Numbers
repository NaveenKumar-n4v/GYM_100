#include <bits/stdc++.h>
#include <iostream>
// #include <string_view>
#include <string>
using namespace std;
#define endl "\n"
#define ll long long
#define array_size(type) ((char *)(&type+1)-(char*)(&type))
#define MOD 1000000007
#ifndef ONLINE_JUDGE
#define debug(x) cerr<<#x<<" "<<x<<endl;
#else
#define debug(x)
#endif
template<typename KeyType, typename ValueType>
std::pair<KeyType, ValueType> get_max( const std::map<KeyType, ValueType>& x ) {
	using pairtype = std::pair<KeyType, ValueType>;
	return *std::max_element(x.begin(), x.end(), [] (const pairtype & p1, const pairtype & p2) {
		return p1.second < p2.second;
	});
}
// Readme.me // CLUE HIDDEN IN STORY // PATTERN == {Practice}
void solve() {
	ll n;
	cin >> n;
	string s;
	cin >> s;
	ll cnt1 = 0;
	ll cnt2 = 0;
	for (int i = 0; i < s.size(); ++i)
	{
		if (s[i] == '8') {
			cnt1 += 1;
		}
		else
			cnt2 += 1;
	}
	debug(cnt1)
	debug(cnt2)
	ll md = n / 11;
	debug(md)
	if (cnt1 >= md) {
		cout << md;
	}
	else
		cout << cnt1;






}

signed main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("error.txt", "w", stderr);
#endif
	ll t = 1;
	// cin >> t;
	while (t--) solve();
	return 0;
}
